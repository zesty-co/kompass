{{- if .Values.victoriaMetrics.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vmagent
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vmagent
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vmagent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vmagent
subjects:
  - kind: ServiceAccount
    name: vmagent
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kompass-vmagent-config
  namespace: {{ .Release.Namespace }}
data:
  vmagent-config.yaml: |
    scrape_configs:
      # For container CPU and memory metrics
      - job_name: 'kubelet'
        scrape_interval: {{ include "kompass.scrapeInterval" . }}
        scheme: https
        tls_config:
          insecure_skip_verify: true
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name]
            target_label: node
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '.*'
            action: keep

      - job_name: 'kubelet-resource'
        scrape_interval: 30s
        scheme: https
        tls_config:
          insecure_skip_verify: true
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name]
            target_label: node
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/resource
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: (.+)
            target_label: __name__
            replacement: kubelet_resource_$1

{{- if .Values.rightsizing.enabled }}
      # for collecting Pilot metrics
      - job_name: 'pilot'
        scrape_interval: {{ include "kompass.scrapeInterval" . }}
        static_configs:
          - targets: ['http://{{- include "rightsizing.recommendationsMaker.name" . -}}.{{ .Release.Namespace }}:{{ .Values.rightsizing.recommendationsMaker.port }}']
        
      - job_name: 'rightsizing_managed_workloads'
        scrape_interval: 1m
        metrics_path: '/managed_workloads_metrics'
        static_configs:
          - targets: ['http://{{- include "rightsizing.recommendationsMaker.name" . -}}.{{ .Release.Namespace }}:{{ .Values.rightsizing.recommendationsMaker.port }}']
{{- end }}

      # for collecting insights metrics
      - job_name: 'kompass-insights'
        scrape_interval: {{ include "kompass.scrapeInterval" . }}
        static_configs:
          - targets: ['http://{{ (index .Values "kompass-insights").insights.service }}.{{ .Release.Namespace }}:{{ (index .Values "kompass-insights").insights.metrics.port }}']

      # for collecting VM metrics
      - job_name: 'vmetrics'
        scrape_interval: {{ include "kompass.scrapeInterval" . }}
        static_configs:
          - targets: ['{{ .Values.victoriaMetrics.server.fullnameOverride }}.{{ .Release.Namespace }}:8428']

      {{- if (index .Values "kompass-insights").recommendations.enabled }}
      # for collecting recommendations
      - job_name: 'recommendations'
        scrape_interval: {{ include "kompass.scrapeInterval" . }}
        static_configs:
          - targets: ['http://{{ include "zesty-k8s.recommendations.fullname" (dict "Values" (index .Values "kompass-insights") "Release" .Release "Chart" (dict "Name" "kompass-insights")) }}.{{ .Release.Namespace }}:{{ (index .Values "kompass-insights").recommendations.http.port }}']
      {{- end }}

      # For pod and node metrics
      - job_name: 'kube-state-metrics'
        scrape_interval: {{ include "kompass.scrapeInterval" . }}
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: {{ include "kube-state-metrics.serviceName" . }}
            action: keep
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '.*'
            action: keep

      # prometheus node exporter scraping for additional node metrics
      - job_name: node-exporter
        kubernetes_sd_configs:
          - role: pod
            selectors:
              - role: pod
                label: "app.kubernetes.io/name=prometheus-node-exporter"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kompass-vm-custom-recording-rules
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kompass.labels" . | nindent 4 }}
data:
  custom-rules.yaml: |
{{ .Files.Get "files/custom-vm-recording-rules.yaml" | indent 4 }}
{{- end -}}
